options {
    LOOKAHEAD = 1;
    CHOICE_AMBIGUITY_CHECK = 2;
    OTHER_AMBIGUITY_CHECK = 1;
    STATIC = true;
    DEBUG_PARSER = false;
    DEBUG_LOOKAHEAD = false;
    DEBUG_TOKEN_MANAGER = false;
    ERROR_REPORTING = true;
    JAVA_UNICODE_ESCAPE = false;
    UNICODE_INPUT = false;
    IGNORE_CASE = false;
    USER_TOKEN_MANAGER = false;
    USER_CHAR_STREAM = false;
    BUILD_PARSER = true;
    BUILD_TOKEN_MANAGER = true;
    SANITY_CHECK = true;
    FORCE_LA_CHECK = false;
}

PARSER_BEGIN(ScriptlangParser)

package com.parser;

public class ScriptlangParser {

    /** Main entry point. */
    public static void main(String args[]) throws ParseException {
        ScriptlangParser parser = new ScriptlangParser(System.in);
        parser.Input();
    }

}

PARSER_END(ScriptlangParser)

/** Root production. */
void Input() :
{}
{
    MatchedBraces() ("\n"|"\r")* <EOF>
}

void MatchedBraces() :
{}
{
    "{" [ MatchedBraces() ] "}"
    {

    }
}
